#!/usr/bin/env ruby

if (%w( -h --help -help help ) & ARGV).length > 0
  puts "usage: djsd [-hv]"
  puts "starts dotjs server in the foreground. kill with ^C"
  exit
end

if ARGV.include?('-v')
  puts "djsd 1.5"
  exit
end

require 'webrick'

dotjs = Class.new(WEBrick::HTTPServlet::AbstractServlet) do
  IMAGE_TYPES = %w(.png .jpg .gif)

  def do_GET(request, response)
    files = []
    ext = File.extname(request.path)
    case
      when ext == '.js'
        files << File.expand_path("~/.js/default.js")
        files << File.expand_path("~/.js/#{request.path.gsub('/','')}")
        mime_type = 'text/javascript'
      when ext == '.css'
        files <<  File.expand_path("~/.js/css/default.css")
        files <<  File.expand_path("~/.js/css/#{request.path.gsub('/','')}")
        mime_type = 'text/css'
      when IMAGE_TYPES.include?(ext)
        files << File.expand_path("~/.js/images/#{request.path.gsub('/','')}")
        mime_type = "image/#{ext[1 .. -1]}"
      else
        puts "oops"
    end

    body = ''
    files.each do |f|
      body << File.read(f) if File.exists?(f)
      body << "\n"
    end

    response.status = body.empty? ? 204 : 200
    if origin = detect_origin(request)
      response['Access-Control-Allow-Origin'] = origin
    end
    response['Content-Type'] = mime_type
    response.body = body
  end

  def detect_origin(req)
    path   = req.path
    origin = req.header['origin']
    search = path.gsub('/','').gsub(/\.js$/,'') + '$'

    if origin.length == 1 && path.length != 1 && origin[0].match(search)
      origin[0]
    end
  end
end

server = WEBrick::HTTPServer.new(:Port => 3131)
server.mount('/', dotjs)

%w( INT TERM ).each do |sig|
  trap(sig) { server.shutdown }
end

server.start
